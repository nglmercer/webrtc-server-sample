import{m as D,_ as O,u as $,a as K,S as A}from"./_plugin-vue_export-helper.CrT3GEYz.js";import{r as V,s as h,t as d,u as C,w as E,F as j,x as F,v as k,y as L,z as U,D as z,A as I,B as b,E as Q}from"./runtime-core.esm-bundler.B9PerW2Z.js";const i=D({myId:"",roomId:"",status:"Desconectado",isConnected:!1,isInitiator:!1,isMicEnabled:!0,isCamEnabled:!0,localStream:null,peers:{}});function S(m,e){const t=i.get().peers;i.setKey("peers",{...t,[m]:{stream:null,...t[m]||{},...e}})}function N(m){const e={...i.get().peers};delete e[m],i.setKey("peers",e)}const W={iceServers:[{urls:["stun:stun.l.google.com:19302","stun:stun1.l.google.com:19302"]}]};class B{peers=new Map;localStream=null;onIceCandidate;onStream;onConnectionStateChange;constructor(e,t,a){this.onIceCandidate=e,this.onStream=t,this.onConnectionStateChange=a}setLocalStream(e){this.localStream=e}async createPeerConnection(e){this.peers.has(e)&&(console.warn(`Ya existe una conexión para el par ${e}. Cerrando la anterior.`),this.closeConnection(e));const t=new RTCPeerConnection(W),a=[];return this.peers.set(e,{connection:t,iceQueue:a}),this.localStream&&this.localStream.getTracks().forEach(s=>{t.addTrack(s,this.localStream)}),t.onicecandidate=s=>{s.candidate&&this.onIceCandidate(e,s.candidate)},t.ontrack=s=>{console.log(`¡Stream remoto recibido de ${e}!`),this.onStream(e,s.streams[0])},t.onconnectionstatechange=()=>{this.onConnectionStateChange(e,t.connectionState)},t}async createOffer(e){let t=this.peers.get(e);t||(await this.createPeerConnection(e),t=this.peers.get(e));const a=await t.connection.createOffer();return await t.connection.setLocalDescription(a),a}async handleOffer(e,t){let a=this.peers.get(e);a||(await this.createPeerConnection(e),a=this.peers.get(e)),await a.connection.setRemoteDescription(t),await this.processIceQueue(e);const s=await a.connection.createAnswer();return await a.connection.setLocalDescription(s),s}async handleAnswer(e,t){const a=this.peers.get(e);if(!a){console.error(`No se encontró conexión para el par ${e} al recibir una respuesta.`);return}await a.connection.setRemoteDescription(t),await this.processIceQueue(e)}async addIceCandidate(e,t){const a=this.peers.get(e),s=new RTCIceCandidate(t);a&&a.connection.remoteDescription?await a.connection.addIceCandidate(s):a?(a.iceQueue.push(s),console.log(`Candidato ICE encolado para el par ${e}.`)):console.error(`No se encontró conexión para el par ${e} al añadir candidato ICE.`)}async processIceQueue(e){const t=this.peers.get(e);if(t)for(;t.iceQueue.length>0;){const a=t.iceQueue.shift();try{console.log(`Procesando candidato ICE encolado para ${e}...`),await t.connection.addIceCandidate(a)}catch(s){console.error(`Error al añadir candidato ICE encolado para ${e}:`,s)}}}toggleMic(e){this.localStream&&this.localStream.getAudioTracks().forEach(t=>{t.enabled=e})}toggleCam(e){this.localStream&&this.localStream.getVideoTracks().forEach(t=>{t.enabled=e})}closeConnection(e){const t=this.peers.get(e);t&&(t.connection.close(),this.peers.delete(e),console.log(`Conexión con ${e} cerrada.`))}closeAllConnections(){for(const e of this.peers.keys())this.closeConnection(e)}}const q=V({__name:"VideoChat",setup(m,{expose:e}){e();const t=new URLSearchParams(window.location.search),a=t.get("userId")||`user_${Math.random().toString(36).substring(2,5)}`,s=t.get("roomId")||"default-room",y=t.get("mode")==="listen",g=$(i),u=L(null);let c,r;U(async()=>{i.set({myId:a,roomId:s,status:"Inicializando...",isMicEnabled:!y,isCamEnabled:!y,isConnected:!1,isInitiator:!1,localStream:null,peers:{}}),await w(),_(),x(),r.connect(),z(()=>g.value.localStream,async n=>{await Q(),u.value&&n&&(u.value.srcObject=n)},{immediate:!0})}),I(()=>{console.log("[CLEANUP] Desmontando componente. Cerrando conexiones..."),c&&c.closeAllConnections(),r&&r.disconnect(),g.value.localStream?.getTracks().forEach(n=>n.stop())});async function w(){if(y){console.log("Modo oyente, no se solicitará media.");return}try{const n=await navigator.mediaDevices.getUserMedia({video:!0,audio:!0});i.setKey("localStream",n),u.value&&(u.value.srcObject=n)}catch(n){console.error("Error al obtener media:",n),i.setKey("status","Error de media. Revisa permisos.")}}function _(){c=new B((n,o)=>{console.log(`[WebRTC] Enviando candidato ICE a ${n}`),r.sendSignal(n,o)},(n,o)=>{console.log(`[WebRTC] Stream recibido de ${n}`),S(n,{stream:o})},(n,o)=>{console.log(`[WebRTC] Estado de conexión con ${n} cambió a: ${o}`),S(n,{status:o})}),g.value.localStream&&c.setLocalStream(g.value.localStream)}function x(){const n=K.getFullUrl();r=new A(n,{userId:a,roomId:s},{onConnect:()=>{i.setKey("status","Conectado a señalización. Uniéndose a la sala..."),r.checkPresence(o=>{i.setKey("isInitiator",!o),r.openOrJoinRoom(!o,p=>{i.setKey("isConnected",!0),i.setKey("status",`Conectado a la sala ${s}`),console.log(`[Signaling] ${o?"Unido":"Abierto"} a la sala. Respuesta:`,p),o&&r.sendNewParticipationRequest(s)})})},onDisconnect:()=>{i.setKey("status","Desconectado"),i.setKey("isConnected",!1)},onMessage:async o=>{const p=o.message,l=o.sender;if(console.log(`[Signaling] Mensaje recibido de ${l}:`,p),p.newParticipationRequest){console.log(`[Signaling] ${l} solicita unirse. Creando oferta...`),S(l,{});const f=await c.createOffer(l);r.sendSignal(l,f)}else if(p.isWebRTCSignal){const f=p.signal;if(f.type==="offer"){console.log(`[Signaling] Oferta recibida de ${l}. Creando respuesta...`),S(l,{});const P=await c.handleOffer(l,f);r.sendSignal(l,P)}else f.type==="answer"?(console.log(`[Signaling] Respuesta recibida de ${l}.`),await c.handleAnswer(l,f)):f.candidate&&(console.log(`[Signaling] Candidato ICE recibido de ${l}.`),await c.addIceCandidate(l,f))}},onUserDisconnected:o=>{console.log(`[Signaling] Usuario ${o} se ha desconectado.`),c.closeConnection(o),N(o)},onRoomOwnerChanged:o=>{console.log(`[Signaling] El nuevo dueño de la sala es ${o}`)}})}function M(){const n=!g.value.isMicEnabled;i.setKey("isMicEnabled",n),c.toggleMic(n)}function T(){const n=!g.value.isCamEnabled;i.setKey("isCamEnabled",n),c.toggleCam(n)}function R(n,o){n&&(n.srcObject=o)}const v={params:t,userId:a,roomId:s,isListener:y,state:g,localVideo:u,get webrtc(){return c},set webrtc(n){c=n},get signaling(){return r},set signaling(n){r=n},initializeMedia:w,initializeWebRTCManager:_,initializeSignalingChannel:x,handleToggleMic:M,handleToggleCam:T,setVideoRef:R};return Object.defineProperty(v,"__isScriptSetup",{enumerable:!1,value:!0}),v}}),J={class:"flex flex-col h-screen mx-auto p-4 font-sans text-white bg-gray-900"},Y={class:"p-4 border-b border-gray-700 text-center"},G={class:"text-2xl font-bold"},H={class:"text-sm text-gray-400"},X={class:"flex-grow p-4 my-4 bg-gray-800/50 rounded-lg grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 overflow-y-auto"},Z={key:0,class:"relative bg-black rounded-lg overflow-hidden shadow-lg"},ee={ref:"localVideo",class:"w-full h-full object-cover",autoplay:"",playsinline:"",muted:""},te={class:"absolute bottom-0 left-0 bg-black/50 px-2 py-1 text-sm rounded-tr-lg"},ae={key:1,class:"absolute inset-0 flex items-center justify-center text-gray-400"},ne={class:"absolute bottom-0 left-0 bg-black/50 px-2 py-1 text-sm rounded-tr-lg"},oe={key:1,class:"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-center text-gray-500"},se={class:"p-4 border-t border-gray-700 flex justify-center items-center space-x-4"};function ie(m,e,t,a,s,y){return b(),h("div",J,[d("header",Y,[d("h1",G,"Sala de Video: "+C(a.state.roomId),1),d("p",H,"Tu ID: "+C(a.state.myId)+" | Estado: "+C(a.state.status),1)]),d("main",X,[a.state.localStream?(b(),h("div",Z,[d("video",ee,null,512),d("div",te,C(a.state.myId)+" (Tú) ",1)])):E("",!0),(b(!0),h(j,null,F(a.state.peers,(g,u)=>(b(),h("div",{key:u,class:"relative bg-black rounded-lg overflow-hidden shadow-lg"},[g.stream?(b(),h("video",{key:0,ref_for:!0,ref:c=>a.setVideoRef(c,g.stream),class:"w-full h-full object-cover",autoplay:"",playsinline:""},null,512)):(b(),h("div",ae," Conectando con "+C(u)+"... ("+C(g.status)+") ",1)),d("div",ne,C(u),1)]))),128)),Object.keys(a.state.peers).length===0&&a.state.isConnected?(b(),h("div",oe,e[0]||(e[0]=[d("p",null,"Estás solo en la sala.",-1),d("p",{class:"text-xs"},"Comparte el enlace para que otros se unan.",-1)]))):E("",!0)]),d("footer",se,[d("button",{onClick:a.handleToggleMic,class:k(["p-3 rounded-full",a.state.isMicEnabled?"bg-blue-600":"bg-red-600"])},"MIC",2),d("button",{onClick:a.handleToggleCam,class:k(["p-3 rounded-full",a.state.isCamEnabled?"bg-blue-600":"bg-red-600"])},"CAM",2)])])}const re=O(q,[["render",ie]]);export{re as default};
