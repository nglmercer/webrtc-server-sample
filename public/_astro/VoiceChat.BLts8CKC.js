import{v as s,s as w,r as k}from"./store.BXkA121N.js";import{_ as E,u as M,S as R,a as T}from"./_plugin-vue_export-helper.CrT3GEYz.js";import{r as D,s as C,t as i,u as m,v as y,w as A,F as O,x as K,y as N,z as P,A as L,B as b}from"./runtime-core.esm-bundler.B9PerW2Z.js";class ${peerConnections={};dataChannels={};localStream=null;callbacks;iceServers={iceServers:[{urls:"stun:stun.l.google.com:19302"}]};constructor(a){this.callbacks=a}setLocalStream(a){this.localStream=a}getPeerConnection(a){if(this.peerConnections[a])return this.peerConnections[a];const o=new RTCPeerConnection(this.iceServers);return o.onicecandidate=t=>{t.candidate&&this.callbacks.onSignalNeeded(a,{type:"candidate",candidate:t.candidate.toJSON()})},o.onconnectionstatechange=()=>{this.callbacks.onConnectionStateChange(a,o.connectionState)},o.ontrack=t=>{console.log(`[WebRTC] Track de audio recibido de ${a}`),this.callbacks.onRemoteStreamAdded(a,t.streams[0])},o.ondatachannel=t=>{const d=t.channel;this.dataChannels[a]=d,d.onmessage=g=>{this.callbacks.onDataChannelMessage?.(a,g.data)}},this.peerConnections[a]=o,o}addLocalTracks(a){this.localStream?this.localStream.getTracks().forEach(o=>{console.log("[WebRTC] Añadiendo track local 'sendrecv' a la conexión"),a.addTrack(o,this.localStream)}):(console.log("[WebRTC] Modo escucha: Añadiendo transceptor de audio 'recvonly'."),a.addTransceiver("audio",{direction:"recvonly"}))}async createOffer(a){const o=this.getPeerConnection(a);o.createDataChannel("metadata"),this.addLocalTracks(o);const t=await o.createOffer();await o.setLocalDescription(t),this.callbacks.onSignalNeeded(a,t)}async handleOffer(a,o){const t=this.getPeerConnection(a);this.addLocalTracks(t),await t.setRemoteDescription(new RTCSessionDescription(o));const d=await t.createAnswer();await t.setLocalDescription(d),this.callbacks.onSignalNeeded(a,d)}async handleAnswer(a,o){const t=this.peerConnections[a];t&&await t.setRemoteDescription(new RTCSessionDescription(o))}async addIceCandidate(a,o){const t=this.peerConnections[a];t&&t.remoteDescription?await t.addIceCandidate(new RTCIceCandidate(o)):(console.warn(`[WebRTC] Se recibió un candidato ICE para ${a} antes de establecer la descripción remota. Se reintentará.`),setTimeout(()=>this.addIceCandidate(a,o),1e3))}toggleMic(a){this.localStream&&this.localStream.getAudioTracks().forEach(o=>{o.enabled=a})}closeConnection(a){this.peerConnections[a]?.close(),delete this.peerConnections[a],delete this.dataChannels[a]}closeAllConnections(){Object.keys(this.peerConnections).forEach(a=>this.closeConnection(a))}}const F=D({__name:"VoiceChat",setup(x,{expose:a}){a();const o=new URLSearchParams(window.location.search),t=o.get("userId")||`user_${Math.random().toString(36).substr(2,5)}`,d=o.get("roomId")||"default-room",g=o.get("mode")==="listen",c=M(s),h=N(null);let l,u;P(async()=>{if(console.log(`[INIT] Montando componente para ${t} en sala ${d}`),s.set({myId:t,roomId:d,status:"Inicializando...",isConnected:!1,isInitiator:!1,isMicEnabled:!g,localStream:null,peers:{}}),g)s.setKey("status","Modo escucha. Conectando...");else try{const e=await navigator.mediaDevices.getUserMedia({audio:{echoCancellation:!0,noiseSuppression:!0}});s.setKey("localStream",e),s.setKey("status","Micrófono listo. Conectando...")}catch(e){console.error("Error al obtener micrófono:",e),s.setKey("status","ERROR: Se necesita permiso para el micrófono.");return}l=new $({onSignalNeeded:(e,n)=>{u.sendSignal(e,n)},onRemoteStreamAdded:(e,n)=>{S(e,n)},onConnectionStateChange:(e,n)=>{console.log(`[WebRTC] Estado de conexión con ${e}: ${n}`),n==="connected"?(w(e,{status:"connected"}),s.setKey("status",`Conectado a ${e}.`)):["disconnected","failed","closed"].includes(n)&&c.value.peers[e]?.status!=="disconnected"&&(s.setKey("status",`Conexión con ${e} perdida.`),p(e))}}),c.value.localStream&&(l.setLocalStream(c.value.localStream),l.toggleMic(c.value.isMicEnabled)),u=new R(T.getFullUrl(),{userId:t,roomId:d},{onConnect:()=>{s.setKey("isConnected",!0),s.setKey("status","Conectado. Verificando sala..."),u.checkPresence(async e=>{const n=!e;s.setKey("isInitiator",n),u.openOrJoinRoom(n,f=>{if(f.error)s.setKey("status",`Error al unirse: ${f.error}`);else{const r=n?"Sala creada. Esperando a otros...":"Unido a la sala. Conectando con pares...";s.setKey("status",r),n||(console.log("[INIT] No soy iniciador. Anunciando mi presencia..."),u.sendNewParticipationRequest(d))}})})},onDisconnect:()=>{s.setKey("isConnected",!1),s.setKey("status","Desconectado del servidor. Recarga la página."),l.closeAllConnections()},onMessage:async({sender:e,message:n})=>{if(e===t)return;c.value.peers[e]&&c.value.peers[e].status;const f=t<e;if(n.newParticipationRequest)f?(console.log(`[Signal] Nuevo usuario '${e}' ha entrado. Mi ID es menor, así que YO le llamo.`),w(e,{status:"negotiating"}),await l.createOffer(e)):console.log(`[Signal] Nuevo usuario '${e}' ha entrado. Mi ID es mayor, así que ESPERO su llamada.`);else if(n.isWebRTCSignal){const{signal:r}=n;r.type==="offer"?f?console.warn(`[Signal] GLARE detectado. Recibí una oferta de '${e}', pero yo soy el que debe llamar. Ignorando su oferta.`):(console.log(`[Signal] Oferta recibida de '${e}'. Mi ID es mayor, así que la acepto y respondo.`),w(e,{status:"negotiating"}),await l.handleOffer(e,r)):r.type==="answer"?(console.log(`[Signal] Respuesta recibida de '${e}'.`),await l.handleAnswer(e,r)):r.candidate&&await l.addIceCandidate(e,r.candidate)}},onUserDisconnected:e=>{c.value.peers[e]&&(s.setKey("status",`Usuario ${e} se fue.`),p(e))},onRoomOwnerChanged:e=>{const n=e===t;s.setKey("isInitiator",n),n&&s.setKey("status","¡Ahora eres el dueño de la sala!")}}),u.connect()}),L(()=>{console.warn("[CLEANUP] Desmontando componente. Cerrando conexiones."),c.value.localStream?.getTracks().forEach(e=>e.stop()),l?.closeAllConnections(),u?.disconnect()});function v(){if(g)return;const e=!c.value.isMicEnabled;s.setKey("isMicEnabled",e),l.toggleMic(e)}function S(e,n){if(!h.value||document.getElementById(`audio-${e}`))return;console.log(`[UI] Creando elemento de audio para ${e}`);const r=document.createElement("audio");r.id=`audio-${e}`,r.srcObject=n,r.autoplay=!0,h.value.appendChild(r)}function p(e){l.closeConnection(e),k(e);const n=document.getElementById(`audio-${e}`);n&&(n.remove(),console.log(`[UI] Elemento de audio para ${e} eliminado.`))}const _={params:o,userId:t,roomId:d,isListener:g,state:c,remoteAudioContainer:h,get webrtc(){return l},set webrtc(e){l=e},get signaling(){return u},set signaling(e){u=e},toggleMicrophone:v,handleRemoteStream:S,handleUserDisconnected:p};return Object.defineProperty(_,"__isScriptSetup",{enumerable:!1,value:!0}),_}}),j={class:"flex flex-col h-screen max-w-2xl mx-auto p-4 font-sans text-white bg-gray-900"},U={class:"p-4 border-b border-gray-700 text-center"},V={class:"text-2xl font-bold"},B={class:"text-sm text-gray-400"},q={class:"flex-grow p-4 my-4 bg-gray-800/50 rounded-lg overflow-y-auto"},I={class:"text-lg font-semibold mb-4 border-b border-gray-600 pb-2"},W={class:"space-y-3"},z={class:"flex items-center p-3 bg-gray-700 rounded-md"},J={class:"font-medium"},G={class:"font-medium"},H={class:"ml-auto text-xs text-gray-400"},Y={key:0,class:"text-center text-gray-500 mt-8"},Q={class:"p-4 border-t border-gray-700 flex justify-center items-center"},X=["disabled"],Z={key:0,xmlns:"http://www.w3.org/2000/svg",class:"h-8 w-8",fill:"none",viewBox:"0 0 24 24",stroke:"currentColor"},ee={key:1,xmlns:"http://www.w3.org/2000/svg",class:"h-8 w-8",fill:"none",viewBox:"0 0 24 24",stroke:"currentColor"},te={ref:"remoteAudioContainer",class:"hidden"};function ae(x,a,o,t,d,g){return b(),C("div",j,[i("header",U,[i("h1",V,"Sala de Voz: "+m(t.state.roomId),1),i("p",B,"Tu ID: "+m(t.state.myId),1),i("p",{class:y(["mt-2 text-md",t.state.isConnected?"text-green-400":"text-yellow-400"])},m(t.state.status),3)]),i("main",q,[i("h2",I," Participantes ("+m(Object.keys(t.state.peers).filter(c=>t.state.peers[c]?.status==="connected").length+1)+") ",1),i("div",W,[i("div",z,[i("span",{class:y(["w-3 h-3 rounded-full mr-3",t.state.isMicEnabled?"bg-green-500":"bg-red-500"])},null,2),i("span",J,m(t.state.myId)+" (Tú)",1)]),(b(!0),C(O,null,K(t.state.peers,(c,h)=>(b(),C("div",{key:h,class:"flex items-center p-3 bg-gray-700 rounded-md"},[i("span",{class:y(["w-3 h-3 rounded-full mr-3",c.status==="connected"?"bg-green-500":"bg-yellow-500 animate-pulse"])},null,2),i("span",G,m(h),1),i("span",H,m(c.status),1)]))),128)),Object.keys(t.state.peers).length===0?(b(),C("div",Y," Estás solo en la sala. Comparte el enlace para que otros se unan. ")):A("",!0)])]),i("footer",Q,[i("button",{onClick:t.toggleMicrophone,disabled:!t.state.localStream,class:y(["flex items-center justify-center w-16 h-16 rounded-full text-white font-bold transition-colors duration-200 disabled:opacity-50 disabled:cursor-not-allowed",t.state.isMicEnabled?"bg-red-600 hover:bg-red-700":"bg-green-600 hover:bg-green-700"])},[t.state.isMicEnabled?(b(),C("svg",Z,a[0]||(a[0]=[i("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a3 3 0 116 0v6a3 3 0 01-3 3z"},null,-1)]))):(b(),C("svg",ee,a[1]||(a[1]=[i("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M15.586 15.586a7 7 0 01-9.172 0L3 12.172V10a7 7 0 0114 0v2.172l-2.414 2.414zM6 18v-2M18 18v-2"},null,-1)])))],10,X)]),i("div",te,null,512)])}const ie=E(F,[["render",ae]]);export{ie as default};
